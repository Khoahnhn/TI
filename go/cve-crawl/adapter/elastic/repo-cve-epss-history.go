package elastic

import (
	"context"
	"cve-crawler/defs"
	"cve-crawler/model"

	"gitlab.viettelcyber.com/awesome-threat/library/adapter/elastic"
)

type cveEpssHistoryRepo struct {
	con elastic.Service
}

func NewCVEEpssHistoryRepo(conf elastic.Config) CVEEpssHistoryRepository {
	return &cveEpssHistoryRepo{
		elastic.NewService(conf),
	}
}

// Name implements CVEEpssHistoryRepository.
func (c *cveEpssHistoryRepo) Name() string {
	return defs.IndexCVEEpssHistory
}

// Store implements CVEEpssHistoryRepository.
func (c *cveEpssHistoryRepo) Store(ctx context.Context, document *model.CveEpssHistory) error {
	if err := c.con.InsertOne(c.Name(), "", document); err != nil {
		return err
	}
	return nil
}

func (inst *cveEpssHistoryRepo) StoreAll(ctx context.Context, documents []*model.CveEpssHistory) error {
	if len(documents) == 0 {
		return nil
	}
	docs := make([]elastic.Document, 0)
	for _, document := range documents {
		docs = append(docs, document)
	}
	if err := inst.con.InsertMany(inst.Name(), "", docs); err != nil {
		return err
	}
	// Success
	return nil
}
