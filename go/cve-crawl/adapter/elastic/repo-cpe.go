package elastic

import (
	"context"

	"cve-crawler/defs"
	"cve-crawler/model"

	"gitlab.viettelcyber.com/awesome-threat/library/adapter/elastic"
	"gitlab.viettelcyber.com/awesome-threat/library/hash"
)

type cpeRepository struct {
	con elastic.Service
}

func NewCPERepository(conf elastic.Config) CPERepository {
	// Success
	return &cpeRepository{con: elastic.NewService(conf)}
}

func (inst *cpeRepository) Name() string {
	// Success
	return defs.IndexCPE
}

func (inst *cpeRepository) GetByID(ctx context.Context, id string) (*model.CPE, error) {
	var result model.CPE
	if err := inst.con.Get(inst.Name(), "", id, &result); err != nil {
		return nil, err
	}
	// Success
	return &result, nil
}

func (inst *cpeRepository) FindByValue(ctx context.Context, value string) (*model.CPE, error) {
	id := hash.SHA1(value)
	// Success
	return inst.GetByID(ctx, id)
}
