package elastic

import "gitlab.viettelcyber.com/awesome-threat/library/adapter/elastic"

type enrichmentRepository struct {
	cpe            CPERepository
	cve            CVERepository
	cveHistory     CVEHistoryRepository
	cveLang        CVELangRepository
	cveRaw         CVERawRepository
	cveLifecycle   CVELifecycleRepository
	cveEpssHistory CVEEpssHistoryRepository
	cveCustomer    CVECustomerRepository
	cwe            CWERepository
}

func NewEnrichmentRepository(conf elastic.Config) EnrichmentRepository {
	// Success
	return &enrichmentRepository{
		cpe:            NewCPERepository(conf),
		cve:            NewCVERepository(conf),
		cveHistory:     NewCVEHistoryRepository(conf),
		cveLang:        NewCVELangRepository(conf),
		cveRaw:         NewCVERawRepository(conf),
		cveLifecycle:   NewCVELifecycleRepository(conf),
		cveEpssHistory: NewCVEEpssHistoryRepo(conf),
		cveCustomer:    NewCVECustomerRepository(conf),
		cwe:            NewCWERepository(conf),
	}
}

func (inst *enrichmentRepository) CPE() CPERepository {
	// Success
	return inst.cpe
}

func (inst *enrichmentRepository) CVE() CVERepository {
	// Success
	return inst.cve
}

func (inst *enrichmentRepository) CVERaw() CVERawRepository {
	// Success
	return inst.cveRaw
}

func (inst *enrichmentRepository) CVELanguage(lang string) CVELangRepository {
	inst.cveLang.SetLang(lang)
	// Success
	return inst.cveLang
}

func (inst *enrichmentRepository) CVEHistory() CVEHistoryRepository {
	// Success
	return inst.cveHistory
}

func (inst *enrichmentRepository) CVELifecycle() CVELifecycleRepository {
	return inst.cveLifecycle
}

func (inst *enrichmentRepository) CVEEpssHistory() CVEEpssHistoryRepository {
	return inst.cveEpssHistory
}

func (inst *enrichmentRepository) CVECustomer() CVECustomerRepository {
	return inst.cveCustomer
}

func (inst *enrichmentRepository) CWE() CWERepository {
	return inst.cwe
}
