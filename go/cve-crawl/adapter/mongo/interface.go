package mongo

import (
	"context"

	"cve-crawler/model"

	"go.mongodb.org/mongo-driver/bson"
)

type (
	repo interface {
		Name() (string, string)
	}

	Repository interface {
		Account() AccountRepository
		Crawler() CrawlerRepository
	}

	AccountRepository interface {
		GroupUser() GroupUserRepository
		Roles() RolesRepository
	}

	CrawlerRepository interface {
		CVEConfig() CVEConfigRepository
		CVEAPIConfig() CVEAPIConfigRepository
	}

	GroupUserRepository interface {
		repo
		Find(ctx context.Context, query *bson.M, sorts []string, offset, size int64) ([]*model.GroupUser, error)
		FindAll(ctx context.Context, query *bson.M, sorts []string) ([]*model.GroupUser, error)
	}

	RolesRepository interface {
		repo
		GetByName(ctx context.Context, name string) (*model.Role, error)
		Find(ctx context.Context, query *bson.M, sorts []string, offset, size int64) ([]*model.Role, error)
		FindAll(ctx context.Context, query *bson.M, sorts []string) ([]*model.Role, error)
	}

	CVEConfigRepository interface {
		repo
		GetByID(ctx context.Context, id string) (*model.NvdCve, error)
		Find(ctx context.Context, query *bson.M, sorts []string, size, offset int64) ([]*model.NvdCve, error)
		FindAll(ctx context.Context, query *bson.M, sorts []string) ([]*model.NvdCve, error)
		Store(ctx context.Context, document *model.NvdCve) error
		UpdateOne(ctx context.Context, document *model.NvdCve) error
	}

	CVEAPIConfigRepository interface {
		repo
		GetOne(ctx context.Context) (model.NvdCveAPI, error)
		Store(ctx context.Context, document model.NvdCveAPI) error
		UpdateOne(ctx context.Context, document model.NvdCveAPI) error
	}
)
