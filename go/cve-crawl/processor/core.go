package processor

import (
	"context"
	"fmt"

	"cve-crawler/model"
)

type (
	Processor interface {
		Start()
	}

	Factory func(ctx context.Context, conf model.WorkerConfig) Processor
)

var processorFunc = map[string]Factory{
	"crawler":       newCveCrawler,
	"analyzer":      newCveAnalyzer,
	"parser":        newCveParser,
	"mapping":       newCveMapping,
	"recheck":       newCVERecheck,
	"crawler-api":   newCVECrawlerAPI,
	"lifecycle":     newCveLifecycle,
	"lifecycle-v2":  newCveLifecycleV2,
	"update-scores": newCVEUpdateScores,
	"cve-epss-job":  NewCveEpssJob,
}

func NewProcessor(ctx context.Context, module string, conf model.WorkerConfig) Processor {
	fn, ok := processorFunc[module]
	if !ok {
		panic(fmt.Errorf("processor <%s> not found", module))
	}
	processor := fn(ctx, conf)
	// Success
	return processor
}
