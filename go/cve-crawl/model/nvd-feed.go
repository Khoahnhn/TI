package model

import (
	"fmt"
	"time"

	"gitlab.viettelcyber.com/awesome-threat/library/hash"

	"cve-crawler/defs"
)

type (
	NvdCve struct {
		ID     string    `json:"id" bson:"id"`
		Url    string    `json:"url" bson:"url"`
		Meta   string    `json:"meta" bson:"meta"`
		Status string    `json:"status" bson:"status"`
		Sum    string    `json:"sum" bson:"sum"`
		Size   int       `json:"size" bson:"size"`
		Year   int       `json:"year" bson:"year"`
		Target string    `json:"target" bson:"target"`
		Last   time.Time `json:"last" bson:"last"`
		Total  int       `json:"total" bson:"total"`
		Error  int       `json:"error" bson:"error"`
	}
)

func (doc *NvdCve) GetID() interface{} {
	// Success
	return doc.ID
}

func (doc *NvdCve) GenID() {
	doc.ID = hash.SHA1(doc.Url)
}

func (doc *NvdCve) GetZipFileName() string {
	// Success
	return fmt.Sprintf(defs.NvdCveZipFilename, doc.Target)
}

func (doc *NvdCve) GetZipFilePath() string {
	// Success
	return fmt.Sprintf(defs.DefaultTempFolder, doc.GetZipFileName())
}

func (doc *NvdCve) GetJsonFileName() string {
	// Success
	return fmt.Sprintf(defs.NvdCveJsonFilename, doc.Target)
}

func (doc *NvdCve) GetJsonFilePath() string {
	// Success
	return fmt.Sprintf(defs.DefaultTempFolder, doc.GetJsonFileName())
}
