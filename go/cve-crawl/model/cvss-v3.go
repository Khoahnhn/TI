package model

import (
	"cve-crawler/defs"
	"strings"
)

type (
	CVSSV3 struct {
		Vector              CVSSV3Vector `json:"cvssV3"`
		ExploitabilityScore float32      `json:"exploitabilityScore"`
		ImpactScore         float32      `json:"impactScore"`
	}

	CVSSV31API struct {
		Vector              CVSSV3Vector    `json:"cvssData"`
		ExploitabilityScore float32         `json:"exploitabilityScore"`
		ImpactScore         float32         `json:"impactScore"`
		Type                defs.SourceType `json:"type"`
		Source              string          `json:"source"`
	}

	CVSSV3Vector struct {
		Version               string  `json:"version"`
		VectorString          string  `json:"vectorString"`
		AttackVector          string  `json:"attackVector"`
		AttackComplexity      string  `json:"attackComplexity"`
		PrivilegesRequired    string  `json:"privilegesRequired"`
		UserInteraction       string  `json:"userInteraction"`
		Scope                 string  `json:"scope"`
		ConfidentialityImpact string  `json:"confidentialityImpact"`
		IntegrityImpact       string  `json:"integrityImpact"`
		AvailabilityImpact    string  `json:"availabilityImpact"`
		BaseScore             float32 `json:"baseScore"`
		BaseSeverity          string  `json:"baseSeverity"`
	}
)

func (doc *CVSSV3Vector) Result() map[string]interface{} {
	// Success
	return map[string]interface{}{
		"Attack Complexity":      strings.Title(strings.ToLower(doc.AttackComplexity)),
		"Attack Vector":          strings.Title(strings.ToLower(doc.AttackVector)),
		"Availability Impact":    strings.Title(strings.ToLower(doc.AvailabilityImpact)),
		"Confidentiality Impact": strings.Title(strings.ToLower(doc.ConfidentialityImpact)),
		"Integrity Impact":       strings.Title(strings.ToLower(doc.IntegrityImpact)),
		"Privileges Required":    strings.Title(strings.ToLower(doc.PrivilegesRequired)),
		"Scope":                  strings.Title(strings.ToLower(doc.Scope)),
		"User Interaction":       strings.Title(strings.ToLower(doc.UserInteraction)),
		"Base Severity":          strings.Title(strings.ToLower(doc.BaseSeverity)),
	}
}
