package model

import (
	"gitlab.viettelcyber.com/awesome-threat/library/adapter/elastic"
	"gitlab.viettelcyber.com/awesome-threat/library/adapter/kafka"
	"gitlab.viettelcyber.com/awesome-threat/library/adapter/mongo"
	"gitlab.viettelcyber.com/awesome-threat/library/adapter/rabbit"
	"gitlab.viettelcyber.com/awesome-threat/library/adapter/redis"
	"gitlab.viettelcyber.com/awesome-threat/library/rest"
)

type (
	WorkerConfig struct {
		App             AppConfig      `json:"app" yaml:"app"`
		TestMode        TestModeConfig `json:"test_mode" yaml:"test_mode"`
		Api             ApiConfig      `json:"api" yaml:"api"`
		Adapter         AdapterConfig  `json:"adapter" yaml:"adapter"`
		NVDApi          string         `json:"nvd_api" yaml:"nvd_api"`
		NVDKey          string         `json:"nvd_key" yaml:"nvd_key"`
		NVDApiModified  string         `json:"nvd_api_modified" yaml:"nvd_api_modified"`
		NVDApiDuration  int64          `json:"nvd_api_duration" yaml:"nvd_api_duration"`
		NVDHistoryApi   string         `json:"nvd_history_api" yaml:"nvd_history_api"`
		CveorgCveApi    string         `json:"cveorg_cve_api" yaml:"cveorg_cve_api"`
		FirstCveEpssAPI string         `json:"first_cve_epss_api" yaml:"first_cve_epss_api"`
		Jobs            JobsConfig     `json:"jobs" yaml:"jobs"`
	}

	AppConfig struct {
		Debug              bool       `json:"debug" yaml:"debug"`
		Core               int        `json:"core" yaml:"core"`
		Schedule           int        `json:"schedule" yaml:"schedule"`
		Timeout            int        `json:"timeout" yaml:"timeout"`
		Proxy              rest.Proxy `json:"proxy" yaml:"proxy"`
		Duration           int        `json:"duration" yaml:"duration"`
		NVDHistoryDuration int        `json:"nvd_history_duration" yaml:"nvd_history_duration"`
		ScheduleCrawlerAPI int        `json:"schedule_crawler_api" yaml:"schedule_crawler_api"`
		ReferenceVendors   []string   `json:"reference_vendors" yaml:"reference_vendors"`
	}

	TestModeConfig struct {
		Enable       bool                   `json:"enable" yaml:"enable"`
		Recheck      TestRecheckConfig      `json:"recheck" yaml:"recheck"`
		UpdateScores TestUpdateScoresConfig `json:"update_scores" yaml:"update_scores"`
	}

	TestRecheckConfig struct {
		TargetCVEs []string `json:"target_cves" yaml:"target_cves"`
		MonthsAgo  int      `json:"months_ago" yaml:"months_ago"`
	}

	TestUpdateScoresConfig struct {
		UpdateAll              bool `json:"update_all" yaml:"update_all"`
		StartIndex             int  `json:"start_index" yaml:"start_index"`
		GetFirstCVEOnly        bool `json:"get_first_cve_only" yaml:"get_first_cve_only"`
		UpdateFirstCVEOnly     bool `json:"update_first_cve_only" yaml:"update_first_cve_only"`
		GetFirstCVEPageOnly    bool `json:"get_first_cves_page_only" yaml:"get_first_cves_page_only"`
		UpdateFirstCVEPageOnly bool `json:"update_first_cves_page_only" yaml:"update_first_cves_page_only"`
	}

	ApiConfig struct {
		Integrate string `yaml:"integrate"`
	}

	AdapterConfig struct {
		Elastic ElasticConfig `json:"elastic" yaml:"elastic"`
		Mongo   MongoConfig   `json:"mongo" yaml:"mongo"`
		Rabbit  RabbitConfig  `json:"rabbit" yaml:"rabbit"`
		Redis   RedisConfig   `json:"redis" yaml:"redis"`
		Kafka   KafkaConfig   `json:"kafka" yaml:"kafka"`
	}

	RabbitConfig struct {
		Crawler rabbit.Config `json:"crawler" yaml:"crawler"`
	}

	ElasticConfig struct {
		Enrichment elastic.Config `json:"enrichment" yaml:"enrichment"`
		Enduser    elastic.Config `json:"enduser" yaml:"enduser"`
	}

	MongoConfig struct {
		Crawler mongo.Config `json:"crawler" yaml:"crawler"`
		Account mongo.Config `json:"account" yaml:"account"`
	}

	RedisConfig struct {
		General redis.Config `json:"general" yaml:"general"`
	}

	KafkaConfig struct {
		Consumer kafka.ConsumerConfig `json:"consumer" yaml:"consumer"`
		Topic    KafkaTopicConfig     `json:"topic" yaml:"topic"`
		Producer kafka.ProducerConfig `yaml:"producer"`
	}

	KafkaTopicConfig struct {
		VulPriorityCisa            string `json:"vul_priority_cisa" yaml:"vul_priority_cisa"`
		CVELifecycleInput          string `json:"cve_lifecycle_input" yaml:"cve_lifecycle_input"`
		VulPriorityJobCollectTopic string `yaml:"vul_priority_job_collect_topic"`
	}

	JobScheduleConfig struct {
		CronSpec string `json:"cron_spec" yaml:"cron_spec"`
	}

	JobsConfig struct {
		EpssJob JobScheduleConfig `json:"epss_job" yaml:"epss_job"`
		CweJob  JobScheduleConfig `json:"cwe_job" yaml:"cwe_job"`
	}
)
